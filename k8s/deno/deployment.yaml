apiVersion: apps/v1
kind: Deployment
metadata:
  name: deno-app-deployment
spec:
  replicas: 2  # Increase replicas
  selector:
    matchLabels:
      app: deno-app
  template:
    metadata:
      labels:
        app: deno-app
    spec:
      initContainers:
      - name: wait-for-postgres
        image: alpine
        command: ['sh', '-c', 'apk add --no-cache netcat-openbsd && until nc -z postgres 5432; do echo waiting for postgres; sleep 2; done;']
      containers:
      - name: deno-app
        image: goodeesh/my-deno-app:local
        imagePullPolicy: Never
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: DATABASE_URL
        resources:
          requests:
            cpu: "1000m"
            memory: "1024Mi"
          limits:
            cpu: "1000m"
            memory: "1024Mi"
        ports:
        - containerPort: 8000
        startupProbe:
          httpGet:
            path: /health
            port: 8000
          failureThreshold: 10
          periodSeconds: 2
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 1
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 0
          periodSeconds: 2